
helper.py
def removeWords(input_string, words_to_remove):
    words = input_string.split()
    filtered_words = [word for word in words if word.lower() not in words_to_remove]
    result_string = ' '.join(filtered_words)
    return result_string

features.py
def findContact(query):
    words_to_remove = [ASSISTANT_NAME, 'make', 'a', 'to', 'phone', 'call', 'send', 'message', 'whatsapp', 'video', 'please']
    query = removeWords(query, words_to_remove)

    try:
        query = query.strip().lower()
        cursor.execute("SELECT mobile_no FROM contacts WHERE LOWER(name) LIKE ? OR LOWER(name) LIKE ?", ('%' + query + '%', query + '%'))
        results = cursor.fetchall()
        print(results[0][0])

        mobile_no_str = str(results[0][0])
        if not mobile_no_str.startswith('+91'):
            mobile_no_str = '+91' + mobile_no_str

        return mobile_no_str, query
    
    except:
        speak('Contact Does not Exist')
        return 0, 0

feature.py 
def whatsApp(mobile_no, message, flag, name):

    if flag == 'whatsapp':
        encoded_message = urllib.parse.quote(message)
        whatsapp_url = f"whatsapp://send?phone={mobile_no}&text={encoded_message}"
        full_command = f'open "{whatsapp_url}"'
        subprocess.run(full_command, shell=True)
        eel.DisplayMessage("Message sent to "+ name)
        speak("Message sent to "+ name)

    else:
        if flag == 'video':
            eel.DisplayMessage("Video calling "+ name)
            speak("Video calling "+ name)
            whatsapp_url = f"whatsapp://send?phone={mobile_no}"

        else:
            eel.DisplayMessage("Calling "+name)
            speak("Calling "+name)
            whatsapp_url = f"whatsapp://call?phone={mobile_no}"

        encoded_url = urllib.parse.quote(whatsapp_url)
        full_command = f'open "{encoded_url}"'
        subprocess.run(full_command, shell=True)




command.py

elif 'whatsapp' in query:
    message = 'whatsapp'
    contact_no, name = findContact(query)
    if contact_no != 0:
        eel.DisplayMessage("Please speak the Whatsapp message.")
        speak("Please speak the Whatsapp message.")
        query = takeCommand()
        speak("Whatsapping "+name)
        whatsApp(contact_no, query, message, name)
    else:
        speak("Contact not found")

elif 'call' in query:
    if 'video call' in query:
        message = 'video'
        contact_no, name = findContact(query)
        if contact_no != 0:
            whatsApp(contact_no, query, message, name)
        else:
            eel.DisplayMessage("Contact not found")
            speak("Contact not found")

    else:
        message = 'voice'
        contact_no, name = findContact(query)
        if contact_no != 0:
            whatsApp(contact_no, query, message, name)
        else:
            eel.DisplayMessage("Contact not found")
            speak("Contact not found")


    

    
